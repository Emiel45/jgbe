#include "Global.inc"
#ifndef USE_JAVA_MOBILE
import java.io.*;
public class romtester {
	public static void main( String[] args ) {
		CPU cpu;
		Cartridge cartridge;
		String romfile="", logfile="";
		for (int i = 0; i < args.length; ++i) {
			if (args[i].charAt(0)!='-')
				romfile = args[i];
			if (args[i].equals("-log"))
				logfile = args[++i];
		}
		if (romfile.equals("")) {
			PRINTLN();
			PRINTLN("ERROR: missing argument");
			PRINTLN();
			PRINTLN("USAGE: java swinggui ROMFILE [-log LOGFILE]");
			PRINTLN();
			return;
		}
		Writer logwriter = null;
		try {
			if (!logfile.equals(""))
				logwriter = new BufferedWriter( new FileWriter(logfile) );
		}
		catch (java.io.IOException e) {
			PRINTLN("Error opening logfile:" + e.getMessage());
			logwriter = null;
		}

		cartridge = new Cartridge(romfile);
		if(cartridge.getError()!=null) {
			PRINTLN("ERROR: "+cartridge.getError());
			return;
		}

		PRINTLN("Succesfully loaded ROM :)");
		cpu = new CPU();
		cpu.loadCartridge(cartridge);

		cpu.reset();
		cpu.AC.isMuted = true;

		int instrlimit=100;

		while (true) {
			if (logwriter != null) {
				String out = STRFORMAT("PC=$%04x AF=$%02x%02x BC=$%02x%02x DE=$%02x%02x HL=$%02x%02x SP=$%04x\n",
					cpu.getPC(),
					cpu.A,
					cpu.F,
					cpu.B,
					cpu.C,
					cpu.D,
					cpu.E,
					cpu.H,
					cpu.L,
					cpu.SP);
				try {
					logwriter.write(out);
				}
				catch (java.io.IOException e) {
					PRINTLN("Error writing logfile:" + e.getMessage());
					logwriter = null;
				}
			}
			if ((--instrlimit==0) || cpu.nextinstruction()==0) {
				String s= STRFORMAT("%02x",cpu.read(cpu.getPC()));
				String ss= STRFORMAT("%04x",cpu.getPC());
				s=s.toUpperCase();
				ss=ss.toUpperCase();
				if (logwriter != null) {
					String out = STRFORMAT("invalid opcode 0x"+s+" at address 0x"+ss+", rombank = "+cartridge.CurrentROMBank+"\n");
					try {
						logwriter.write(out);
					}
					catch (java.io.IOException e) {
						PRINTLN("Error writing logfile:" + e.getMessage());
						logwriter = null;
					}
				}
				try {
					logwriter.flush();
				}
				catch (java.io.IOException e2) {
					PRINTLN("Error flushing logfile:" + e2.getMessage());
					logwriter = null;
				}
				return;
			}
		}
	}
}
#endif
