/*
 *  IMPORTANT: THIS FILE IS AUTOGENERATED
 *
 *  Any modifications to this file will be lost when regenerating it.
 *  Modify the corresponding .jpp file instead, and regenerate this file.
 */

public class TestSuite
{
 private CPU cpu;
 private Cartridge cartridge;

 public TestSuite()
 {
 }

 public int diagnose( boolean verbose ) {
  return 0;
 }

 public long runinstr(int b1) {
  return runinstr(b1, 0, 0);
 }

 public long runinstr(int b1, int b2) {
  return runinstr(b1, b2, 0);
 }

 public void nothing() {
 }

 public long runinstr(int b1, int b2, int b3) {
  cartridge.MM_ROM[0][0x100] = b1;
  cartridge.MM_ROM[0][0x101] = b2;
  cartridge.MM_ROM[0][0x102] = b3;
  Disassembler deasm = new Disassembler(cpu);
  String s = deasm.simple_disasm(0x100);
  if (s.indexOf("**MISSING    INSTRUCTION**") > -1)
   return 0;
  System.out.printf("%-40s",s);
  int cycles = 4194304;
  long ct1 = System.currentTimeMillis();
  for (; cycles > 0;) {
   cpu.PC=0x100;
   cycles -= cpu.nextinstruction();


  }
  long ct2 = System.currentTimeMillis();
  System.out.printf("%5dms\n",ct2-ct1);
  return ct2-ct1;
 }

 public final void run( String[] args ) {

   if (args.length == 0) {
    System.out.println();
    System.out.println("ERROR: missing argument");
    System.out.println();
    System.out.println("USAGE: java TestSuite ROMFILE");
    System.out.println();
    return;
   }
   cartridge = new Cartridge(args[0]);
   if(cartridge.getError()!=null) {
    System.out.println("ERROR: "+cartridge.getError());
    return;
   }

   System.out.println("Succesfully loaded ROM :)");
   cpu = new CPU(cartridge);

   runinstr(0xf3);
   runinstr((0x06+(4<<3)), 0xff);
   runinstr((0x06+(5<<3)), 0xa0);
   System.out.println("Starting Tests...");
   long time;
   time = runinstr(0);
   time = runinstr(0);
   for (int i = 0; i < 0x100; ++i) {
    time = runinstr(i, 0xff, 0x80);
   }
   time = runinstr(0);
 }

 public static void main( String[] args ) {
  final TestSuite suite = new TestSuite();
  suite.run(args);
 }
}
